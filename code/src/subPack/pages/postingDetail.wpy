<template>
    <view class="page" bindtap="hideTips" wx:if="{{init}}" id='page'>
        <view class="posting">
            <view class="user-info">
                <image  src="{{posting.userInfo.avatar}}"/>
                <view class="name-time">
                    <view class="name" bindlongpress="longPress({{posting.userInfo.name}},{{posting.userInfo.user_id}},{{posting.userInfo.avatar}})" 
                    >{{posting.userInfo.name}}</view>
                    <view class="time">{{posting.postTime}}</view>
                </view>
                <view class="like" catchtap="changePostLike()">             
                    <view wx:if="{{posting.likeNum==0}}" class="text">抢首赞</view>
                    <view wx:else class="text">{{posting.likeNum}}</view>
                    <image wx:if="{{posting.iLike}}" src="{{ossUrl+'like-on.png'}}"/>
                    <image wx:else src="{{ossUrl+'like-off.png'}}"/>
                </view>
            </view>
            <view class="rich-text">
                {{content.text}}
            </view>
            <view >
              <image wx:for="{{content.imgList}}" 
                catchtap="previewImage({{content.imgList}},{{item}})"
                mode="aspectFit"  src="{{item}}"/>
            </view>
        </view>
        <view class="tabs">
            <view class="title">全部评论</view>
        </view>
        <view class="comment-list">
            <view class="no-comment" wx:if="{{commentList.length == 0}}">
                <text>暂无评论，期待您的精彩热评～</text>
            </view>
            <view class="comment" wx:for="{{commentList}}" wx:for-item="comment" wx:for-index="commentIndex">
                <view class="commenter-info">
                    <image src="{{comment.commenter.avatar}}"/>
                    <view class="commenter">
                        <view class="name" bindlongpress="longPress({{comment.commenter.name}},{{comment.commenter.user_id}},{{comment.commenter.avatar}})">{{comment.commenter.name}}</view>
                        <view class="floor-time">
                            <view class="floor">{{comment.floor}}楼</view>
                            <view class="time">{{comment.commentTime}}</view>
                        </view>
                    </view>
                    <view class="like" catchtap="changeCommentLike({{comment}},{{commentIndex}})">                       
                        <view wx:if="{{comment.likeNum==0}}" class="text">抢首赞</view>
                        <view wx:else class="text">{{comment.likeNum}}</view>
                        <image wx:if="{{comment.iLike}}" src="{{ossUrl+'like-on.png'}}"/>
                        <image wx:else src="{{ossUrl+'like-off.png'}}"/>
                    </view>
                </view>
                <view class="comment-cnt" catchtap="changeHoldText({{commentIndex}},{{comment.commenter.name}},{{null}})">{{comment.commentText}}</view>
                <view class="reply-list" wx:if="{{comment.replyList.length!=0}}">
                    <view class="reply-item" wx:for="{{comment.replyList}}" wx:for-item="reply" >
                        <view class="replyer" bindlongpress="longPress({{reply.replyer.name}},{{reply.replyer.user_id}},{{reply.replyer.avatar}})">{{reply.replyer.name}}</view>
                        <view wx:if="{{reply.beReplyer}}" class="split">回复</view>
                        <view wx:if="{{reply.beReplyer}}" class="be-replyer" 
                        bindlongpress="longPress({{reply.beReplyer.name}},{{reply.beReplyer.user_id}},{{reply.beReplyer.avatar}})">{{reply.beReplyer.name}}</view>
                        <view class="split">:</view>
                        <view class="reply-cnt" catchtap="changeHoldText({{commentIndex}},{{reply.replyer.name}},{{reply.replyer.user_id}})">{{reply.replyText}}</view>
                    </view>
                </view>
                <view class="reply-input" catchtap="changeCurReplyInput({{commentIndex}})">
                    <input class="input" cursor-spacing='10' maxlength='-1' placeholder="回复{{replyInputList[commentIndex].beReplyerName}}" 
                    placeholder-style="color:#bbb;" bindinput="replyInputEvent"  value="{{replyInputList[commentIndex].inputText}}"
                    bindfocus="replyInputFocus"/>
                    <view class="{{replyInputList[commentIndex].inputText.length==0?'send-off':'send-on'}}"
                        catchtap="sendRelpy({{commentIndex}})"
                    >发送</view>
                </view>
            </view>
        </view>
        <view class="reply-bottom">
            <input class="input" maxlength='-1'  placeholder="评论帖子" cursor-spacing='10'  bindinput="commentInput" value="{{commentText}}"/>
            <view catchtap="sendComment" class="{{commentText.length==0?'send-off':'send-on'}}" >评论</view>
        </view>
        <view wx:if="{{tipsShow}}" class="tips" style="top:{{tipsY}}px;left:{{tipsX}}px;"
            bindtap="goChat">{{tips}}</view>
    </view>
</template>

<script>
  import wepy from 'wepy';
  import http from '../../utils/Base';
  import api from '../../utils/API';
  export default class postingDetail extends wepy.page {
    config = {
      navigationBarTitleText: '帖子详情',
    }

    data = {
        init:false,
        ossUrl:'https://mingrui-static.oss-cn-shenzhen.aliyuncs.com/zq/',
        article_id:null,//帖子id
        curReplyInput:0,//当前输入框
        replyInputList:[],//回复输入框，提示字及内容缓存,长度与commentList一致
        commentText:"",//评论内容
        tipsShow:false,
        friend:{
            sender_name:'',
            sender_id:'',
            avatar:''
        },//丢纸条对象
        tips:'丢纸条',
        tipsX:0,
        tipsY:0,
        content:{},
        posting:{},
        commentList:[]    
    }

    onLoad(option) {
        this.article_id = option.posting_id;
        http.get(api.ArticleDetail,{
                id:option.posting_id,
                user_id:wx.getStorageSync('userInfoInServer').id},true).then(res=>{
            console.log(res)
            this.content = res.content;
            this.posting = res.posting;
            this.commentList = res.commentList;
            this.$apply();
            this.initRelpyInputList();        
       })
    }
    //初始话回复输入框内容
    initRelpyInputList(){
        for(let index in this.commentList){
            let relpyInput = new Object();
            relpyInput['beReplyerName'] = "";
            relpyInput['beReplyerId'] = "";
            relpyInput['inputText'] = "";
            this.replyInputList.push(relpyInput);
            relpyInput = null;           
        }
        this.init = true;
        this.$apply();
    }
    methods={
        //预览图片
        previewImage (imgList,curImg) {
            wx.previewImage({
                current: curImg, // 当前显示图片的http链接  
                urls: imgList// 需要预览的图片http链接列表  
            })
        },
        //改变帖子点赞
        changePostLike(){
            http.post(api.ArticleLike,{
                user_id:wx.getStorageSync("userInfoInServer").id,
                article_id:this.article_id,
            },false,false).then(res=>{
                this.posting.likeNum = res.state?
                this.posting.likeNum+1:this.posting.likeNum-1;
                this.posting.iLike = res.state?1:0;
                this.$apply();
            })   
        },
        //改变评论点赞
        changeCommentLike(item,index){
            this.commentList[index].likeNum = item.iLike?
            this.commentList[index].likeNum - 1:
            this.commentList[index].likeNum + 1;
            this.commentList[index].iLike = item.iLike?0:1;
            this.$apply();
        },
        //改变当前回复输入框
        changeCurReplyInput(index){
            this.curReplyInput = index;
            this.$apply();
        },
        //改变当前输入框holdtext
        changeHoldText(index,beReplyerName,bereplyerId){  
            //回复楼主不需要显示
            if(bereplyerId==null){
                this.replyInputList[index].beReplyerName = '';
                this.replyInputList[index].beReplyerId = this.commentList[index].commenter.user_id;
                console.log(this.replyInputList[index]);
                this.$apply();
                return; 
            }else{
                //不能自己回复自己
                if(beReplyerName==wx.getStorageSync("userInfoInServer").name){
                    this.replyInputList[index].beReplyerName = "";
                    this.replyInputList[index].beReplyerId = ""; 
                    this.$apply();
                    return; 
                }
                this.replyInputList[index].beReplyerName = beReplyerName;
                this.replyInputList[index].beReplyerId = bereplyerId; 
                console.log(this.replyInputList[index]);                   
                this.$apply();
            }
            
        },
        //回复输入框输入事件
        replyInputEvent(e){
            this.replyInputList[this.curReplyInput].inputText = e.detail.value;
            this.$apply();
        },
        //回复输入框发送
        sendRelpy(index){
            console.log(this.replyInputList[index].inputText);
            if(this.replyInputList[index].inputText.length==0){return;}    
            //回复者  
            var replyer = new Object();
            replyer['name'] = wx.getStorageSync('userInfoInServer').name;
            replyer['user_id'] = wx.getStorageSync('userInfoInServer').id;
            var reply = new Object();
            reply['replyer'] = replyer;
            reply["replyText"] = this.replyInputList[index].inputText;
            //不是回复楼主 添加被回复者
            if(this.replyInputList[index].beReplyerName!=""){
                var beReplyer = new Object();
                beReplyer['name'] = this.replyInputList[index].beReplyerName;
                beReplyer['user_id'] = this.replyInputList[index].beReplyerId;
                reply['beReplyer'] = beReplyer;
            }
            console.log(reply)
            http.post(api.ArticleComment,{
                parent_id:              this.commentList[index].commentId,//回复
                be_reply_comment_id:    this.commentList[index].commentId,
                article_id:             this.article_id,//帖子id
                article_author_uid:     this.posting.userInfo.user_id,//帖子作者id
                replyer_user_id:        replyer.user_id,//回复者id
                replyer_user_name:      replyer.name,//回复者名字
                be_replyer_user_id:     reply.beReplyer?reply.beReplyer.user_id:wx.getStorageSync('userInfoInServer').id,//被回复者id
                be_replyer_user_name:   reply.beReplyer?reply.beReplyer.name:wx.getStorageSync('userInfoInServer').name,  //被回复者名字                    
                reply_to:               reply.beReplyer?reply.beReplyer.name:"",//是否显示回复者的名字 
                content:                reply.replyText,
            },true,false).then(res=>{
                console.log(res)
                if(res.code==200){
                    this.commentList[index].replyList.push(reply);
                    this.replyInputList[index].inputText="";
                    this.$apply();
                    wx.showToast({title:'回复成功！'});
                }else{
                    wx.showToast({title:res.msg});
                }
            }) 
        },
        //评论输入框输入事件
        commentInput(e){
            this.commentText = e.detail.value;
            this.$apply();
        },
        //发送评论事件
        sendComment(){
            if(this.commentText.length==0){return;}
            var commenter = {
                name:wx.getStorageSync("userInfoInServer").name,
                avatar:wx.getStorageSync("userInfoInServer").avatar,
                user_id:wx.getStorageSync("userInfoInServer").id,
            }
            var comment = new Object();
            comment['commentTime'] = '刚刚';
            comment['commentText'] = this.commentText;
            comment['commenter']   = commenter;
            comment['replyList']   = [];
            comment['likeNum']     = 0;
            comment['iLike']       = 0; 
            comment['floor']       = this.commentList.length+1;
            console.log(comment)
            http.post(api.ArticleComment,{
                parent_id:              0,//回复
                be_reply_comment_id:    0,
                article_id:             this.article_id,//帖子id
                article_author_uid:     this.posting.userInfo.user_id,//帖子作者id
                replyer_user_id:        comment.commenter.user_id,//评论者id
                replyer_user_name:      comment.commenter.name,//评论者名字
                be_replyer_user_id:     this.posting.userInfo.user_id,//被评论者id
                be_replyer_user_name:   this.posting.userInfo.name,  //被评论者者名字                    
                reply_to:               this.posting.userInfo.name,//被评论者名字 
                content:                comment.commentText,//评论内容
            },true,false).then(res=>{
                console.log(res)
                if(res.code==200){
                    this.commentList.push(comment);
                    let relpyInput = new Object();
                    relpyInput['beReplyerName'] = "";
                    relpyInput['beReplyerId'] = "";
                    relpyInput['inputText'] = "";
                    this.replyInputList.push(relpyInput);
                    this.commentText = "";
                    this.$apply();
                    wx.showToast({title:'评论成功！'});
                    // 使页面滚动到底部
                    wx.createSelectorQuery().select('#page').boundingClientRect(rect=> {                    
                        wx.pageScrollTo({
                            scrollTop: rect.bottom
                        })
                    }).exec();
                }else{
                    wx.showToast({title:res.msg});
                }
            })
        },
        //长按用户名弹出操作框
        longPress(name,id,avatar,e){
            console.log(e)
            if(id==wx.getStorageSync('userInfoInServer').id){
                return;
            }
            this.friend['sender_name'] = name;
            this.friend['sender_id'] = id;
            this.friend['avatar'] = avatar;
            this.tipsShow = true;
            this.tipsX = e.currentTarget.offsetLeft;
            this.tipsY = e.currentTarget.offsetTop + 20;
            this.$apply();
        },
        //隐藏操作框
        hideTips(){
            this.tipsShow = false;
            this.$apply();
        },
        //前往私聊
        goChat(){
            wx.navigateTo({
                    url: `./IM/chat?friend=${JSON.stringify(this.friend)}`
                });
            }
    }
    computed = {}
    
  }
</script>

<style lang='scss'>
.posting{
    display: flex;
    flex-direction: column;
    padding:20rpx;
    display: flex;
    .user-info{
        display: flex;
        align-items: center;
        image{
            width: 70rpx;
            height: 70rpx;
            border-radius: 50%;
            margin-right:20rpx;
        }
        .name-time{
            display: flex;
            flex-direction: column;
            flex:1;
            .name{
                font-size:28rpx;
            }
            .time{
                font-size:25rpx;
                color:#888;
            }
        }
        .like{
            float: right;
            display: flex;
            align-items:center;
            image{
                width: 40rpx;
                height: 40rpx;
            }
            .text{
                color:#888;
                font-size: 24rpx;
                margin-right:10rpx;
            }
        }
    }
    .rich-text{
        margin:20rpx 0;
        font-size:30rpx;
        color:#333;
        line-height: 45rpx;
        letter-spacing: 3rpx;
    }
    image{
        width: 100%;
        border-radius:20rpx;
    }
}
.tabs{
    border-bottom: 1px solid #eee;
    border-top: 1px solid #eee;
    border-left: 5px solid #108ee9;
    padding:20rpx;
    height: 40rpx;
    .title{
        font-size:30rpx;
        font-weight:bold;
        float: left;
    }

}
.comment-list{
    margin-bottom: 80rpx;
    .no-comment{
        height:50vh;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size:28rpx;
        color:#108ee9;
    }
    .comment{
        padding: 20rpx;
        display: flex;
        flex-direction: column;
        .commenter-info{
            display: flex;
            align-items: center;
            image{
                width: 70rpx;
                height: 70rpx;
                border-radius: 50%;
                margin-right:20rpx;
            }        
            .commenter{
                display: flex;
                flex-direction: column;
                flex: 1;
                .name{
                    font-size:28rpx;
                }
                .floor-time{
                    margin-top:13rpx;
                    display: flex;
                    .floor{
                        font-size:25rpx;
                        color:#888;
                    }
                    .time{
                        margin-left:10rpx;
                        font-size:25rpx;
                        color:#888;
                    }
                }
            }
            .like{
                display: flex;
                align-items:center;
                image{
                    width: 40rpx;
                    height: 40rpx;
                    margin:0;
                }
                .text{
                    color:#888;
                    font-size: 24rpx;
                    margin-right:10rpx;
                }
            }
        }
        .comment-cnt{
            display: flex;
            flex-direction: column;
            padding:10rpx;
            margin-left: 80rpx;
            margin-top: 10rpx;
        }
        .reply-list{
            background-color:#eaeaea;
            display: flex;
            flex-direction: column;
            padding:10rpx;
            margin-left: 80rpx;
            margin-top: 10rpx;
            .reply-item{
                display: flex;
                font-size:26rpx;
                align-items: center;
                flex-wrap: wrap;
                color:#333;
                .replyer{
                }
                .split{
                    color:#108ee9;
                    margin:8rpx;
                    word-break: keep-all;
                }
                .be-replyer{
                }
                .reply-cnt{

                }
            }
            .open-tips {
                display :inline-block;
                position: relative;
                width: 40rpx;
                height: 30rpx;
                margin-right: 20rpx;
            }
            .open-tips::after {
                display: inline-block;
                content: " ";
                height: 18rpx;
                width: 18rpx;
                border-width: 0 2rpx 2rpx 0;
                border-color: #999;
                border-style: solid;
                transform: matrix(0.71, 0.71, -0.71, 0.71, 0, 0);
                transform-origin: center;
                transition: transform .3s;
                position: absolute;
                top: 50%;
                right: 10rpx;
                margin-top: -10rpx;
            }
            
        }
        .reply-input{
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding:10rpx;
            margin-left: 80rpx;
            margin-top: 20rpx;
            background-color:#eaeaea;
            .input{
                padding: 10rpx;
                display: flex;
                align-items: center;
                border-radius: 5rpx;
                background-color: #fff;
                flex:1;
                margin-right:10rpx;
            }
            .send-off{
                border-radius: 5rpx;
                padding:10rpx;
                background-color: #eaeaea;
                color:#bbb;
                border:1rpx solid #bbb;
            }
            .send-on{
                border-radius: 5rpx;
                padding:10rpx;
                background-color: #108ee9;
                color:#fff;
            }
        }
    }
}

.reply-bottom{
    position:fixed;
    z-index:10;
    left: 0rpx;
    bottom: 0rpx;
    right:0rpx;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding:10rpx;
    background-color:#eaeaea;
    .input{
        padding: 10rpx;
        display: flex;
        align-items: center;
        border-radius: 5rpx;
        background-color: #fff;
        flex:1;
        margin-right:10rpx;
    }
    .send-off{
        border-radius: 5rpx;
        padding:10rpx;
        background-color: #eaeaea;
        color:#bbb;
        border:1rpx solid #bbb;
        text-align: center;
        width: 10%;
    }
    .send-on{
        border-radius: 5rpx;
        padding:10rpx;
        background-color: #108ee9;
        color:#fff;
        text-align: center;
        width: 10%;
    }
        
}
.page{
    position: relative;
}
.tips{
    padding:20rpx 10rpx 20rpx;
    box-shadow: 3rpx 3rpx 3rpx 3rpx #ddd ;
    background-color: #fff;
    border:1rpx solid #eee;
    font-size:26rpx;
    position: absolute;
    height: 20px;
    z-index:10;
}
</style>
