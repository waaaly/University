<template>
    <view style="position:relative;">
        <scroll-view  scroll-y="true" class="posts-his" style="height:{{scrollH}}px;transform:translateX({{x0}}px);"  catchtap="changeCurPost({{null}})">
            <view wx:if="{{postList.length==0}}" class="no-data">您还未发布任何贴子呢～</view>
            <view  class="posts-record" wx:for="{{postList}}" wx:for-item="post" wx:for-index="postIndex" bindtap="goDetail({{post}})">
              <view class="time-like">
                <view class="time">{{post.postTime}}</view>
                <view class="like" catchtap="changeILike({{postIndex}},{{post.likeNum}})">
                  <view wx:if="{{post.likeNum==0}}" class="text">抢首赞</view>
                  <view wx:else class="text">{{post.likeNum}}</view>
                  <image class="icon" wx:if="{{post.iLike}}" src="{{ossUrl+'like-on.png'}}"/>
                  <image class="icon" wx:else src="{{ossUrl+'like-off.png'}}"/>
                </view>
              </view>
              <view class="content">
                <view class="cnt">{{post.content.text}}</view>
                <block wx:if="{{post.content.imgList.length!=0}}">
                    <view wx:if="{{post.content.imgList.length==1}}" class="singleImg">
                        <image  wx:for="{{post.content.imgList}}" 
                            wx:for-item='imgItem' lazy-load='true' 
                            catchtap="previewImage({{post.content.imgList}},{{imgItem}})"
                            mode='aspectFit' src="{{imgItem}}"/>
                    </view>
                    <view wx:else class="imageList">
                        <image  wx:for="{{post.content.imgList}}" 
                            wx:for-item='imgItem' lazy-load='true' 
                            catchtap="previewImage({{post.content.imgList}},{{imgItem}})"
                            mode='center' src="{{imgItem}}"/>
                    </view>
                </block>
              </view>
              <view class="can-see-box">
                <view class="can-see">{{post.enableView}}</view>
                <view class="dot-box" catchtap="changeCurPost({{postIndex}})">
                  <view class="dot" >
                    <view wx:if="{{curPostIndex == postIndex}}" class="tips">
                      <picker bindchange="changeEnableView" range-key="value" range="{{enableViewList}}" >
                        <text class="tips-item" >可见权限</text>
                      </picker>         
                      <view class="tips-item" catchtap="delePost({{postIndex}})">删除</view>
                    </view>
                  </view>
                </view>             
              </view>
            </view>
        </scroll-view>

        <scroll-view  scroll-y="true" class="reply" bindscroll="hisScroll" style="height:{{scrollH}}px;transform:translateX({{x1}}px);">
            <view wx:if="{{replyList.length==0}}" class="no-data">暂时还没有人评论/回复您哟～</view>
            <view class="reply-record" wx:for="{{replyList}}" wx:for-item="reply" 
                  wx:for-index="replyIndex"  bindtap="goDetail({{reply}})">
              <view class="user-info">
                  <image class="avatar" src="{{reply.userInfo.avatar}}"/>
                  <view class="name-time">
                    <view class="name">{{reply.userInfo.name}}</view>
                    <view class="time">{{reply.replyTime}}</view>
                  </view>
              </view>
              <view class="reply-box">
                <view class="reply-cnt">
                  <text class="cnt">回复到：{{reply.replyCnt}}</text>
                </view>
                <view class="reply-btn" catchtap="isShowInput({{true}},{{replyIndex}})" >
                  <text class="btn">点击回复</text>
                </view>
              </view>
              <view class="i-say">我：{{reply.iSay}}</view> 
            </view>
        </scroll-view>
        <view wx:if="{{replyInputShow}}" wx:for-index="replyIndex" class="reply-bottom" style="bottom:{{inputBottomH}}px">
            <input class="input"  placeholder="回复{{replyTo}}"  bindinput="replyInput" value="{{replyText}}"
              focus="true" maxlength='-1' cursor-spacing='10'  bindfocus="replyInputFocus" bindblur="replyInputBlur"/> 
            <view catchtap="sendReply" class="{{replyText.length==0?'send-off':'send-on'}}" >回复</view>
        </view>

        <scroll-view  scroll-y="true" class="chat" style="height:{{scrollH}}px;transform:translateX({{x2}}px);" >
            <view wx:if="{{conversations.length==0}}" class="no-data">这里什么都没有快去找个TA丢纸条吧～</view>
            <view class="chat-record" wx:for="{{conversations}}" wx:for-item="chat" data-index="{{index}}" bindtap="goChat({{chat}})" bindlongpress="delete" >
              <image class="avatar" src="{{chat.avatar}}"/>
              <view class="name-cnt">
                <view class="name">{{chat.sender_name}}</view>
                <block wx:if="{{chat.type=='text'}}">
                  <view class="chat-cnt">{{chat.content}}</view>
                </block>
                <block wx:else>
                  <view wx:if="{{chat.type=='image'}}" class="chat-cnt">[图片]</view>
                  <view wx:if="{{chat.type=='voice'}}" class="chat-cnt">[语音]</view>
                </block>
              </view>
              <view class="chat-time">{{chat.time}}</view>
            </view>
        </scroll-view>

        <view wx:if="{{bottomTabShow}}" class="bottom-tab">
            <view class="item" bindtap='changeTab(0)'>
              <image wx:if="{{curTab==0}}" class="icon" src="{{ossUrl+'lishi-on.png'}}"/>
              <image wx:else class="icon" src="{{ossUrl+'lishi-off.png'}}"/>
              <view class="{{curTab==0?'text-on':'text-off'}}">历史贴</view>
            </view>
            <view class="item" bindtap='changeTab(1)'>
              <image wx:if="{{curTab==1}}" class="icon" src="{{ossUrl+'huifu-on.png'}}"/>
              <image wx:else class="icon" src="{{ossUrl+'huifu-off.png'}}"/>
              <view class="{{curTab==1?'text-on':'text-off'}}">回复我</view>
            </view>
            <view class="item" bindtap='changeTab(2)'>
              <image wx:if="{{curTab==2}}" class="icon" src="{{ossUrl+'diuzhitiao-on.png'}}"/>
              <image wx:else class="icon" src="{{ossUrl+'diuzhitiao-off.png'}}"/>
              <view class="{{curTab==2?'text-on':'text-off'}}">丢纸条</view>           
            </view>
        </view>
    </view>
</template>

<script>
  import wepy from 'wepy';
  import http from '../../utils/Base';
  import api from '../../utils/API';
  export default class NewsList extends wepy.page {
    config = {
      navigationBarTitleText: '消息中心',
      navigationBarBackgroundColor:'#ededed'
    }

    data = {
      ossUrl:'https://mingrui-static.oss-cn-shenzhen.aliyuncs.com/zq/',

      lastTab:1,
      curTab:1,//当前页面
      screenW:0,//屏幕宽度
      scrollH:0,//滚动高度
      tabH:0,//底部tab高度
      x0:0,
      x1:0,
      x2:0,

      postList:[],//历史贴
      curPostIndex:null,//当前操作的帖子
      enableViewList:[],//可见标签数组，用于picker
      
      replyList:[],//回复列表
      replyInputShow:false,//回复输入框
      replyTo:"",//输入框的占位符，回复谁
      curReplyIndex:null,//当前操作的回复
      replyText:'',//回复内容
      inputBottomH:0,//输入框底部偏移量
      bottomTabShow:true,//底部tab

      conversations:[],//会话列表
    }


    onLoad(option) {
      
    
      wx.getSystemInfo({
        success:(res=>{
          this.x0 = -(res.screenWidth+1);
          this.x2 = res.screenWidth+1;
          this.screenW = res.screenWidth+1;
          this.scrollH = res.screenHeight-0.18*res.screenHeight;
          this.tabH = res.screenHeight * 0.08;
        })
      })

      //获取可见标签数组
      http.get(api.ArticleTab,{
          user_id:wx.getStorageSync('userInfoInServer')?
          wx.getStorageSync('userInfoInServer').id:'',
        }).then(res=>{
          this.enableViewList = res.enableViewList;
          this.enableViewList[0].value = '全部可见';
      })

       //获取回复列表
      http.get(api.ReplyList,{
          user_id:wx.getStorageSync('userInfoInServer').id,
        }).then(res=>{
          console.log(res);
          for(let item of res){
            this.replyList.push(item.replyList);
          }
          this.$apply();
      })

      //获取历史贴
      http.get(api.ArticleHis,{
          user_id:wx.getStorageSync('userInfoInServer').id,
        }).then(res=>{
          console.log(res);
          for(let item of res){
            this.postList.push(item.postList);
          }
      })      
    }

    onShow(){
       //获取会话列表
      http.get(api.MessageList,{
          user_id:wx.getStorageSync('userInfoInServer').id,
        }).then(res=>{
          console.log(res);
          this.conversations = res;
      })
      //设置监听会话列表更新
      this.$parent.getIMHandler().setOnReceiveMessageListener({
          listener: (msg) => {              
            var isNew = true;
            for(let item of this.conversations){
              if(item.sender_id == msg.friendId){
                console.log('更新会话', msg);
                item['time'] = msg.time;
                item['avatar'] = msg.headUrl;
                isNew = false;
                this.$apply();
                return;
              }
            }

            if(isNew){
              console.log('插入新会话', msg);
              var chatItem = {
                sender_id: msg.friendId,
                sender_name: msg.friendName,
                content: msg.content,
                time: msg.time,
                avatar: msg.headUrl,
              }             
              this.conversations.unshift(chatItem);
              this.$apply();
            }                                   
          }
      })
    }  
    /**
     * 切换页面
     */
    changeView(){
        this[`x${this.curTab}`] = 0;  
        if(this.lastTab<this.curTab){
          this[`x${this.lastTab}`] = -this.screenW;  
        }else{
           this[`x${this.lastTab}`] = this.screenW;  
        }
        this.$apply();
    }
    /**
     * 
     */
    getConversationsItem(item) {
        let {latestMsg, ...msg} = item;
        return Object.assign(msg, JSON.parse(latestMsg));
    }
    methods={
      //切换底部tab
      changeTab(tab){
        if(this.curTab==tab){return;}
        this.lastTab = this.curTab;
        this.curTab = tab; 
        this.replyInputShow = false;  
        this.curReplyIndex = null; 
        this.replyTo = "";
        this.$apply();
        this.changeView();
      },
      //帖子详情页
      goDetail(posting){
        console.log(posting)
          wx.navigateTo({
              url: `./postingDetail?posting_id=${posting.articleId}`,
          })
      },
      //预览图片
      previewImage (imgList,curImg) {
          wx.previewImage({
              current: curImg, // 当前显示图片的http链接  
              urls: imgList// 需要预览的图片http链接列表  
          })
      },
      //切换当前操作的帖子
      changeCurPost(postIndex){
        this.curPostIndex = postIndex;
      },
      //改变点赞
      changeILike(postIndex,isLike){
        http.post(api.ArticleLike,{
            user_id:wx.getStorageSync("userInfoInServer").id,
            article_id:this.postList[postIndex].articleId,
        },false,false).then(res=>{
            this.postList[postIndex].iLike = res.state?1:0;
            this.postList[postIndex].likeNum = res.state?
            this.postList[postIndex].likeNum+1:
            this.postList[postIndex].likeNum-1;
            this.$apply();
        })   
      },
      //删除帖子
      delePost(postIndex){
        wx.showModal({
          title:'删除帖子',
          content:'您确定将当前帖子删除吗？',
          success:(res=>{
            if(res.confirm){
              http.post(api.ArticleDelete,{id:this.postList[postIndex].articleId},true).then(res=>{
                console.log(res);
                this.postList.splice(postIndex,1);
                wx.showToast({title:"删除成功！"});
                this.curPostIndex = null;
                this.$apply();
              })      
            }else{
              this.curPostIndex = null;
              this.$apply();
            }
          })
        })
      },
      //修改帖子可见 ,e.detail.value为下标值
      changeEnableView(e){
        this.postList[this.curPostIndex].enableView = this.enableViewList[e.detail.value].value;
        this.curPostIndex = null;
        this.$apply();
      },
      //历史屏滚动
      hisScroll(){
        this.replyInputShow = false;  
        this.curReplyIndex = null; 
        this.replyTo = "";
        this.$apply();
      },
      //回复框显示/隐藏
      isShowInput(status,index){
        this.replyInputShow = status;  
        this.curReplyIndex = index; 
        index?this.replyTo = this.replyList[index].userInfo.name:this.replyTo = "";
        this.$apply();  
      },
      //回复框取得焦点
      replyInputFocus(e){
        this.bottomTabShow = false;
        this.$apply();
      },
      //回复框失去焦点
      replyInputBlur(e){
        this.replyInputShow = false; 
        this.inputBottomH = this.tabH + 5;
        this.bottomTabShow = true;
        this.$apply();  
      },
      //回复框输入事件
      replyInput(e){
        this.replyText = e.detail.value;
        this.$apply();
      },
      //快速回复
      sendReply(){  
        http.post(api.ArticleComment,{
            parent_id:              this.replyList[this.curReplyIndex].parentId,//回复
            be_reply_comment_id:    this.replyList[this.curReplyIndex].commentId,
            article_id:             this.replyList[this.curReplyIndex].articleId,//帖子id
            article_author_uid:     this.replyList[this.curReplyIndex].articleAuthorUid,//帖子作者id
            replyer_user_id:        wx.getStorageSync('userInfoInServer').id,   //回复者id       
            replyer_user_name:      wx.getStorageSync('userInfoInServer').name,//回复者名字
            be_replyer_user_id:     this.replyList[this.curReplyIndex].userInfo.user_id,//被回复者id
            be_replyer_user_name:   this.replyList[this.curReplyIndex].userInfo.name,  //被回复者名字                    
            reply_to:               this.replyList[this.curReplyIndex].userInfo.name,//是否显示回复者的名字 
            content:                this.replyText,
        },true,false).then(res=>{
            console.log(res)
            if(res.code==200){
                wx.showToast({title:'回复成功！'});
            }else{
                wx.showToast({title:res.msg});
            }
        })
      },
      //前往聊天页
      goChat(chat){
        console.log(chat)
        //不需要content字段
        delete chat.content;
        wx.navigateTo({
            url: `./IM/chat?friend=${JSON.stringify(chat)}`
        });
      },
      //删除聊天
      delete: function(e){
        var that = this;
        var chatlist = that.data.conversations
        var index = e.currentTarget.dataset.index;
        wx.showModal({
          title: '提示', //提示的标题,
          content: '确定删除此聊天', //提示的内容,
          success: function(res){
            if(res.confirm){
              chatlist.splice(index,1);
              that.$apply();
            }else if(res){
              return false;
            }
            that.conversations = chatlist;
            that.$apply();
          }
        });
        
      },

    }
    watch={
      async curTab(newTab,old){
        let title = '';
        if(newTab==0){
          title= '我的历史贴';
        }else if(newTab==1){
          title= '回复我的';
        }else if(newTab==2){
          title= '纸条消息';
        }
        wx.setNavigationBarTitle({
          title: title, 
        })
      }
    }
       
}
</script>
<style lang='scss'>
.no-data{
  display: flex;
  height: 100%;
  align-items: center;
  justify-content: center;
  color: #108ee9;
}
// 历史贴
.posts-his{
  position: absolute;
  width: 100%;
  display: inline-block;
  overflow: hidden;
  .posts-record{
    position: relative;
    display: flex;
    flex-direction: column;
    padding: 20rpx;
    margin: 10rpx;
    border-radius: 10rpx;
    border:1px solid #eee;
    margin-bottom: 40rpx;
    margin-left: 40rpx;
    .time-like{
      display: flex;
      justify-content: space-between;
      align-items: center;
      .time{
        color:#999;
        font-size: 24rpx;
      }   
      .like{
        display: flex;
        align-items:center;
        .icon{
            width: 40rpx;
            height: 40rpx;
        }
        .text{
            color:#999;
            font-size: 24rpx;
            margin-right:10rpx;
        }
      }   
    }
    .content{
      display: flex;
      flex-direction: column;
      margin: 10rpx 0rpx;
      .cnt{
        margin:20rpx 0;
        font-size:28rpx;
        color:#333;
        line-height: 40rpx;
        letter-spacing: 3rpx;
      }
      .imageList{
          display: flex;
          flex-direction: row;  // 横向布局
          flex-wrap: wrap; // 超出自动换行
          image{
              width: 32%;
              height: 32vw;
              margin:5rpx;
              border-radius: 10rpx;
          }
      }
    }
    .can-see-box{
      display: flex;
      align-items: center;
      justify-content: space-between;
      .can-see{
        background-color: #dedede;
        color:#999;
        padding:10rpx;
        border-radius: 24rpx;
        font-size: 24rpx;
        width:fit-content;
      }
      .dot-box{
        width: 50rpx;
        height: 50rpx;
        margin-right: 6rpx;
        position: relative;
        .dot{
          position: absolute;
          width: 5px;
          height: 5px;
          background: #999;
          border-radius: 50%;
          right: 0;
          bottom: 18rpx;

          .tips{
            background-color: #fff;
            display: flex;
            flex-direction: column;
            padding: 10rpx;
            z-index: 10;
            position: absolute;
            left: -101px;
            width: 80px;
            height: 50px;
            align-items: center;
            justify-content: space-between;
            top: -20px;
            border:1px solid #eee;
            .tips-item{
              color:#999;
              font-size:26rpx;
            }
          }
        }
        .dot::before {
            content: '';
            position: absolute;
            top: -7px;
            background: #999;
            width: 5px;
            height: 5px;
            border-radius: 50%;
        }
        .dot::after {
            content: '';
            position: absolute;
            bottom: -7px;
            background:  #999;
            width: 5px;
            height: 5px;
            border-radius: 50%;
        }
      } 
    }
  }
  .posts-record::before{
    position: absolute;
    content: "";
    top: 30px;
    left: -20px;
    border-top: 8px solid transparent;
    border-bottom: 8px solid transparent;
    border-left: 8px solid transparent;
    border-right: 11px solid #eee;

  }
}
//回复我
.reply{
  position: absolute;
  width: 100%;
  display: inline-block;
  overflow: hidden;
  .reply-record{
    position: relative;
    padding:20rpx;
    display: flex;
    flex-direction: column;
    .user-info{
      display: flex;
      align-items: center;
      .avatar{
        width: 80rpx;
        height: 80rpx;
        border-radius: 50%;
        margin-right: 30rpx;
      }
      .name-time{
        flex:1;
        display: flex;
        align-items: baseline;
        .name{
          flex:1;
          font-size: 28rpx;
          color:#108ee9;
        }
        .time{
          font-size: 23rpx;
          color:#999;
        }
      }
    }
    .reply-box{
      margin-left:110rpx;
      position: relative;
      margin-bottom:20rpx;
      display: flex;
      flex-direction: column;
      .reply-cnt{
        margin-bottom:10rpx;
        .cnt{
          font-size: 28rpx;
          color:#333;
          float: left;
        }
      }
      .reply-btn{
        display: flex;
        justify-content: flex-end;
        .btn{
          float: right;
          background-color: #dedede;
          color:#999;
          padding:10rpx;
          border-radius: 10rpx;
          font-size: 22rpx;
          width:fit-content;
        }
      }    
    }
    .i-say{
      margin-left:110rpx;
      border-radius: 5rpx;
      background-color: #ededed;
      padding:15rpx 10rpx;
      font-size: 26rpx;
      color:#666;

    }
  }
  .reply-record::after{
     content: '';
    right: 0rpx;
    bottom: 0rpx;
    border-bottom: 1rpx solid #eee;
    position: absolute;
    left: 130rpx;
  }
  
}
.reply-bottom{
    position: fixed;
    display: flex;
    z-index:10;
    left: 0rpx;
    right:0rpx;
    align-items: center;
    justify-content: space-between;
    padding:10rpx;
    background-color:#eaeaea;
    .input{
        padding: 10rpx;
        display: flex;
        align-items: center;
        border-radius: 5rpx;
        background-color: #fff;
        flex:1;
        margin-right:10rpx;
    }
    .send-off{
        border-radius: 5rpx;
        padding:10rpx;
        background-color: #eaeaea;
        color:#bbb;
        border:1rpx solid #bbb;
        text-align: center;
        width: 10%;
    }
    .send-on{
        border-radius: 5rpx;
        padding:10rpx;
        background-color: #108ee9;
        color:#fff;
        text-align: center;
        width: 10%;
    }
        
  }
//丢纸条
.chat{
  position: absolute;
  width: 100%;
  display: inline-block;
  overflow: hidden;
  .chat-record{
    display: flex;
    align-items: center;
    position: relative;
    padding:10rpx 20rpx; 
    height: 9vh;
    .avatar{
      width: 80rpx;
      height: 80rpx;
      border-radius: 50%;
      margin-right: 30rpx;
    }
    .name-cnt{
      display: flex;
      flex-direction: column;
      flex:1;
      .name{
        font-weight:bold;
        color:#333;
        font-size: 28rpx;
      }
      .chat-cnt{
        margin-top:10rpx;
        font-size: 23rpx;
        color:#999;
        display: -webkit-box;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 1;
        text-align: justify;
        overflow: hidden;
      }
    }
    .chat-time{
      font-size: 23rpx;
      color:#999;
    }
  }
  .chat-record::after{
    content: '';
    right: 0rpx;
    bottom: 0rpx;
    border-bottom: 1rpx solid #eee;
    position: absolute;
    left: 130rpx;
  }
}
.bottom-tab{
  height:8vh;
  z-index:10;
  position: fixed;
  bottom: 0rpx;
  left:0rpx;
  right:0rpx;
  background-color:#f8f8f8;
  display: flex;
  padding: 10rpx 0rpx;
  border-top:1rpx solid #ddd;
  align-items: center;
  justify-content: space-between;
  font-size: 24rpx;
  .item{
    display: flex;
    flex: 1;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    .icon{
      width: 50rpx;
      height: 50rpx;
      margin-bottom:10rpx;
    }
    .text-off{
      color:#333;
    }
    .text-on{
      color:#108ee9;
    }
  }
}
.unread-dot {
  float: right;
  width: 16px;
  height: 16px;
  background-color: red;
  border-radius: 50%;
  margin-top: -35px;
  font-size:10rpx;
  color:#fff;
}


/*隐藏滚动条*/
// ::-webkit-scrollbar {
//   width: 0;
//   height: 0;
//   color: transparent;
// }
</style>
